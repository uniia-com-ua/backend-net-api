name: Admin Auth API - Docker CI/CD with Fleet

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: uniia-admin-auth
  SERVICE_PATH: UniiaAdmin.Auth
  FLEET_PATH: UniiaAdmin.Auth/fleet

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ —Ä–µ–ª—ñ–∑ –¥–ª—è admin-auth
    if: startsWith(github.event.release.tag_name, 'admin-auth-')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from release tag
        id: version
        run: |
          # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–µ—Ñ—ñ–∫—Å admin-auth- –∑ —Ç–µ–≥—É —Ä–µ–ª—ñ–∑—É
          TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION=${TAG_NAME#admin-auth-}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Release tag: $TAG_NAME"
          echo "Extracted version: $VERSION"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies for Admin Auth
        run: dotnet restore ${{ env.SERVICE_PATH }}/${{ env.SERVICE_PATH }}.csproj

      - name: Build Admin Auth
        run: dotnet build ${{ env.SERVICE_PATH }}/${{ env.SERVICE_PATH }}.csproj --no-restore

      - name: Test Admin Auth
        run: dotnet test ${{ env.SERVICE_PATH }}/${{ env.SERVICE_PATH }}.csproj --no-build --verbosity normal

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # –ö–æ–Ω—Ç–µ–∫—Å—Ç - –∫–æ—Ä—ñ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
          file: ./${{ env.SERVICE_PATH }}/Dockerfile  # –Ø–≤–Ω–æ –≤–∫–∞–∑—É—î–º–æ —à–ª—è—Ö –¥–æ Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/uniia-com-ua/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/uniia-com-ua/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=Admin Auth API
            org.opencontainers.image.description=UNIIA Admin Authentication Service
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Update Fleet configuration
        run: |
          echo "üöÄ –û–Ω–æ–≤–ª—é—î–º–æ Fleet –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–ª—è Admin Auth API..."
          echo "üì¶ –†–µ–ª—ñ–∑: ${{ github.event.release.name }}"
          echo "üè∑Ô∏è  –¢–µ–≥: ${{ github.event.release.tag_name }}"
          echo "üìù –í–µ—Ä—Å—ñ—è: ${{ steps.version.outputs.VERSION }}"
          
          # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–≥ –æ–±—Ä–∞–∑—É –≤ kustomization.yaml
          sed -i "s/newTag: .*/newTag: ${{ steps.version.outputs.VERSION }}/" ${{ env.FLEET_PATH }}/kustomization.yaml
          
          # –û–Ω–æ–≤–ª—é—î–º–æ –≤–µ—Ä—Å—ñ—é –≤ ConfigMap
          sed -i "s/APP_VERSION: .*/APP_VERSION: \"${{ steps.version.outputs.VERSION }}\"/" ${{ env.FLEET_PATH }}/configmap.yaml
          
          # –ü–æ–∫–∞–∑—É—î–º–æ –∑–º—ñ–Ω–∏
          echo "–ó–º—ñ–Ω–∏ –≤ Fleet –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:"
          echo "=== kustomization.yaml ==="
          git diff ${{ env.FLEET_PATH }}/kustomization.yaml
          echo "=== configmap.yaml ==="
          git diff ${{ env.FLEET_PATH }}/configmap.yaml

      - name: Commit and push Fleet changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.FLEET_PATH }}/kustomization.yaml ${{ env.FLEET_PATH }}/configmap.yaml
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–º—ñ–Ω–∏ –¥–ª—è –∫–æ–º—ñ—Ç—É
          if git diff --staged --quiet; then
            echo "–ù–µ–º–∞—î –∑–º—ñ–Ω –¥–ª—è –∫–æ–º—ñ—Ç—É"
            exit 0
          else
            git commit -m "üöÄ [Admin Auth] –†–µ–ª—ñ–∑ ${{ github.event.release.tag_name }}

            –û–Ω–æ–≤–ª–µ–Ω–æ Fleet –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–æ –≤–µ—Ä—Å—ñ—ó ${{ steps.version.outputs.VERSION }}
            
            üì¶ –û–±—Ä–∞–∑: ${{ env.REGISTRY }}/uniia-com-ua/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            üîß ConfigMap: –í–µ—Ä—Å—ñ—è APP_VERSION = ${{ steps.version.outputs.VERSION }}
            üè∑Ô∏è  –†–µ–ª—ñ–∑: ${{ github.event.release.name }}
            üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è: ${{ github.event.release.html_url }}
            
            –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –º–æ–∂–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–µ—Ä—Å—ñ—é —á–µ—Ä–µ–∑ endpoint /ver –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ env –∑–º—ñ–Ω–Ω—É APP_VERSION"
            
            git push
            echo "‚úÖ Fleet –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π"
          fi

      - name: Update release with deployment info
        uses: actions/github-script@v7
        with:
          script: |
            const releaseBody = context.payload.release.body || '';
            const deploymentInfo = `

            ## üöÄ Deployment Info
            - **Docker Image**: \`${{ env.REGISTRY }}/uniia-com-ua/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}\`
            - **App Version (ENV)**: \`${{ steps.version.outputs.VERSION }}\`
            - **Version Endpoint**: \`/ver\` (reads from APP_VERSION env)
            - **Fleet Configuration**: Updated automatically
            - **Deployment Status**: ‚úÖ Ready for Fleet sync

            _Auto-deployed via GitHub Actions_`;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: releaseBody + deploymentInfo
            });

      - name: Summary
        run: |
          echo "üéâ Admin Auth API —É—Å–ø—ñ—à–Ω–æ –∑—ñ–±—Ä–∞–Ω–æ —Ç–∞ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ!"
          echo "üì¶ –û–±—Ä–∞–∑: ${{ env.REGISTRY }}/uniia-com-ua/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}"
          echo "üîß APP_VERSION env: ${{ steps.version.outputs.VERSION }}"
          echo "üè∑Ô∏è  –†–µ–ª—ñ–∑: ${{ github.event.release.tag_name }}"
          echo "üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ–ª—ñ–∑: ${{ github.event.release.html_url }}"
          echo "üìç –í–µ—Ä—Å—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ endpoint /ver"
          echo "üöÄ Fleet –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑–≥–æ—Ä–Ω–µ –Ω–æ–≤—É –≤–µ—Ä—Å—ñ—é –≤ –∫–ª–∞—Å—Ç–µ—Ä—ñ"